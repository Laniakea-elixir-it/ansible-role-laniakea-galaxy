---
- name: 'Include nginx role'
  include_role:
    name: galaxyproject.nginx
  vars:
    pip_virtualenv_command: /usr/bin/python3 -m virtualenv       # usegalaxy_eu.certbot, usegalaxy_eu.tiaas2, galaxyproject.galaxy
    certbot_virtualenv_package_name: virtualenv                  # usegalaxy_eu.certbot
    pip_package: python3-pip
    #Certbot
    certbot_auto_renew_hour: "{{ 23 |random(seed=inventory_hostname)  }}"
    certbot_auto_renew_minute: "{{ 59 |random(seed=inventory_hostname)  }}"
    certbot_auth_method: --webroot
    certbot_install_method: virtualenv
    certbot_virtualenv_command: virtualenv
    certbot_auto_renew: yes
    certbot_auto_renew_user: root
    certbot_environment: staging
    certbot_well_known_root: /srv/nginx/_well-known_root
    certbot_share_key_users:
      - nginx
    certbot_post_renewal: |
      systemctl restart nginx || true
    certbot_domains:
      - "{{ inventory_hostname }}"
    certbot_agree_tos: --agree-tos

    nginx_selinux_allow_local_connections: true
    nginx_servers:
      - redirect-ssl
    nginx_ssl_servers:
      - galaxy
    nginx_enable_default_server: false
    nginx_conf_http:
      client_max_body_size: 1g
      gzip: "on" # This is enabled by default in Ubuntu, and the duplicate directive will cause a crash.
      gzip_proxied: "any"
      gzip_static: "on"   # The ngx_http_gzip_static_module module allows sending precompressed files with the ".gz" filename extension instead of regular files.
      gzip_vary: "on"
      gzip_min_length: 128
      gzip_comp_level: 6  # Tradeoff of better compression for slightly more CPU time.
      gzip_types: |
          text/plain
          text/css
          text/xml
          text/javascript
          application/javascript
          application/x-javascript
          application/json
          application/xml
          application/xml+rss
          application/xhtml+xml
          application/x-font-ttf
          application/x-font-opentype
          image/png
          image/svg+xml
          image/x-icon
    nginx_ssl_role: usegalaxy_eu.certbot
    nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem
    nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-nginx.pem

    galaxy_tusd_port: 1080
    galaxy_mutable_config_dir: '{{ laniakea_galaxy_config_dir }}'
    galaxy_server_dir: "{{ laniakea_galaxy_server_dir }}" 

    nginx_conf_user: galaxy
    nginx_conf_group: galaxy


# #Ad specific repositroy to download nginx verison with upload module in 

# - name: '[Ubuntu] Install nginx-extras repository'
#   apt_repository:
#     repo: ppa:galaxyproject/nginx
#   when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '16.04'

# - name: '[Ubuntu] Prevent nginx update from Ubuntu repository'
#   copy:
#     src: 'galaxyproject-nginx-pin-700'
#     dest: '/etc/apt/preferences.d/'
#   become_user: root
#   become_method: sudo
#   when: ansible_os_family == "Debian"

# # Differently from RedHat OS family in Debian SO family web server are run
# # by the www-data user. So in this case we add galaxy to www-data group
# # to solve permission problem related to the fact that nginx is run by www-data user

# - name: '[Ubuntu] Add the user www-data in galaxy group'
#   user:
#     name: galaxy
#     group: www-data
#   when: ansible_os_family == "Debian"

# - name: '[Ubuntu] Install nginx dependencies'
#   apt:
#     pkg: nginx-common=1.10.3-0ubuntu0.16.04.2ppa1
#   when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '16.04'

# - name: Create tmp dir
#   file:
#     path: '{{ database_path }}/tmp'
#     state: directory
#     owner: "{{ laniakea_galaxy_user.name }}"
#     group: "{{ laniakea_galaxy_group.name }}"

# - name: '[Ubuntu] Create nginx_upload_store dir'
#   file:
#     path: '{{ database_path }}/tmp/nginx_upload_store'
#     state: directory
#     owner: www-data
#     group: "{{ laniakea_galaxy_group.name }}"
#   when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '16.04'

# - name: '[EL] make a new user'
#   user: 
#     name: nginx
#     state: present
#     group: galaxy
#   when: ansible_os_family == "RedHat" 

# - name: '[EL] Add NGINX repository'
#   command: 'yum-config-manager --add-repo https://depot.galaxyproject.org/yum/galaxy.repo'
#   become_user: root
#   become_method: sudo
#   when: ansible_os_family == "RedHat"

# - name: '[Ubuntu] Include nginx role'
#   include_role:
#     name: galaxyproject.nginx
#   vars:
#     nginx_selinux_allow_local_connections: true
#     nginx_flavor: extras=1.10.3-0ubuntu0.16.04.2ppa1
#     nginx_servers:
#       - galaxy
#     nginx_enable_default_server: false
#     nginx_conf_http:
#       client_max_body_size: 1g
#     galaxy_server_dir: "{{ laniakea_galaxy_server_dir }}" 
#   when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '16.04'

# - name: '[EL] Include nginx role'
#   include_role:
#     name: galaxyproject.nginx
#   vars:
#     nginx_selinux_allow_local_connections: true
#     nginx_flavor: galaxy
#     nginx_servers:
#       - galaxy
#     nginx_enable_default_server: false
#     nginx_conf_http:
#       client_max_body_size: 1g
#     galaxy_server_dir: "{{ laniakea_galaxy_server_dir }}" 
#     nginx_conf_user: galaxy
#     nginx_conf_group: galaxy
#   when: ansible_os_family == "RedHat" 
