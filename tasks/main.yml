---

- include_vars: vars-RedHat.yml
  when: ansible_os_family == 'RedHat'

- name: Install dependencies 
  import_tasks: pre-tasks.yml

- name: Include postgresql role
  include_role:
    name: galaxyproject.postgresql

- name: Include natefoo role 
  import_tasks: postgresql_objects.yml

- name: Include geerlingguy role 
  include_role:
    name: geerlingguy.pip
  vars:
    pip_package: python-pip
  when: ansible_os_family == "RedHat" 

- name: Include geerlingguy role [ubuntu]
  include_role:
    name: geerlingguy.pip
  vars:
    pip_package: python3-pip
  when: ansible_os_family == "Debian"

- name: '[Ubuntu] Include galaxy role for "mule"'
  import_tasks: install_galaxy_Debian_mule.yml
  when: 
    - ansible_os_family == "Debian"
    - uwsgi_mode == "mule"

- name: '[Ubuntu] Include galaxy rolei for "zergpool"'
  import_tasks: install_galaxy_Debian_zerg.yml
  when: 
    - ansible_os_family == "Debian"
    - uwsgi_mode == "mule"

- name: '[EL] Include galaxy role for "mule"'
  import_tasks: install_galaxy_RedHat_mule.yml
  when: 
    - ansible_os_family == "RedHat" 
    - uwsgi_mode == "mule"

- name: '[EL] Include galaxy role for "zergpool"'
  import_tasks: install_galaxy_RedHat_zerg.yml
  when: 
    - ansible_os_family == "RedHat" 
    - uwsgi_mode == "zerg"

- name: Include miniconda role run by galaxy user
  import_tasks: miniconda.yml
  become: yes
  become_user: galaxy

- name: Include systemd role
  import_tasks: systemd.yml

- name: Include nginx role
  import_tasks: nginx.yml

- name: Include proftpd role
  import_tasks: proftpd.yml
  become: yes
  become_user: root

- name: set default laniakea job conf 
  import_tasks: job_conf.yml
  become: yes 
  become_user: galaxy
  when: uwsgi_mode == "zerg"

- name: add test-toolshed 
  template:
    src: 'tool_sheds_conf.xml.j2'
    dest: '{{ galaxy_mutable_config_dir }}/tool_sheds_conf.xml'

- name: Create log dir for uwsgi
  file:
    path: '{{ galaxy_log_path }}'
    state: directory
    owner: '{{ LA_galaxy_user.name }}'
    group: '{{ LA_galaxy_group.name }}'

# Start the Galaxy production environment.
# The Galaxy DB is now populated at startup, therefore we need to start it before user creation.
# See here: https://github.com/galaxyproject/ansible-galaxy/pull/112
# The old task to populate the database is here: https://github.com/indigo-dc/ansible-role-galaxycloud/blob/master/tasks/postgresql.yml
- meta: flush_handlers

- name: '[VM] Wait Galaxy'
  wait_for:
    host: 127.0.0.1
    port: '4010'
    timeout: 300

- name: create admin user
  include: admin_user.yml
