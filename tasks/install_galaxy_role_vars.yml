---
- name: Include galaxy role
  include_role:
    name: galaxyproject.galaxy
    public: true
  vars:
    galaxy_virtualenv_command: python3 -m virtualenv
    galaxy_venv_dir: "{{ laniakea_galaxy_venv_dir }}"
    pip_virtualenv_command: /usr/bin/python3 -m virtualenv
    
    galaxy_create_user: "{{ laniakea_galaxy_create_user }}"
    galaxy_force_checkout: "{{ laniakea_galaxy_force_checkout }}"
    galaxy_separate_privileges: "{{ laniakea_galaxy_separate_privileges }}"
    galaxy_manage_paths: "{{ laniakea_galaxy_manage_paths }}"
    galaxy_layout: "{{ laniakea_galaxy_layout }}"
    #galaxy_privsep_user: "{{ laniakea_galaxy_privsep_user }}"
    galaxy_user: '{{ laniakea_galaxy_user }}' 
    #galaxy_group: '{{ laniakea_galaxy_group }}'
    galaxy_root: '{{ laniakea_galaxy_root }}'
    galaxy_mutable_config_dir: '{{ laniakea_galaxy_config_dir }}'
    galaxy_config_file: '{{ laniakea_galaxy_config_file }}'
    galaxy_commit_id: "{{ galaxy_version }}"
    galaxy_config_style: yaml
    
    galaxy_manage_systemd: true 
    galaxy_manage_gravity: true
    galaxy_systemd_mode: gravity

    galaxy_config_templates:
      - src: templates/galaxy/config/job_conf.yml.j2
        dest: "{{ galaxy_config.galaxy.job_config_file }}"
   
    galaxy_config:
      galaxy:
        brand: "{{ galaxy_instance_description }}"
        admin_users: "{{ GALAXY_ADMIN_EMAIL }}"
        database_connection: "postgresql:///galaxy?host=/var/run/postgresql"
        file_path: /data
        check_migrate_tools: false
        tool_data_path: "{{ galaxy_mutable_data_dir }}/tool-data"
        object_store_store_by: uuid
        # id_secret: "{{ vault_id_secret }}" # unvomment if use vault encryption
        job_config_file: "{{ galaxy_config_dir }}/job_conf.yml"

        # SQL Performance
        database_engine_option_server_side_cursors: true
        slow_query_log_threshold: 5
        enable_per_request_sql_debugging: true 
        # File serving Performance
        nginx_x_accel_redirect_base: /_x_accel_redirect
        # Automation / Ease of Use / User-facing features
        watch_job_rules: 'auto'
        allow_path_paste: true
        enable_quotas: true
        allow_user_deletion: true
        show_welcome_with_login: true
        expose_user_name: true
        expose_dataset_path: true
        expose_potentially_sensitive_job_metrics: true
        # NFS workarounds
        retry_job_output_collection: 3
        # Debugging
        cleanup_job: onsuccess
        allow_user_impersonation: true
        # Tool security
        outputs_to_working_directory: true

        # TUS
        tus_upload_store: /data/tus
        # add test-toolshed
        tool_sheds_config_file: '{{ laniakea_galaxy_config_dir }}/tool_sheds_conf.xml'

        #release_20.05 variables
        #tool_search_index_dir: '{{ database_path }}/tool_search_index_dir' 
        #tool_cache_data_dir: '{{ database_path }}/tool_cache'
        #tool_data_table_config_path: '{{ tool_data_table_config_with_cvmfs }}'


      gravity:
        galaxy_root: "{{ galaxy_root }}/server"
        app_server: gunicorn
        gunicorn:
          # listening options
          bind: "unix:{{ galaxy_mutable_config_dir }}/gunicorn.sock"
          # performance options
          workers: 2
          # Other options that will be passed to gunicorn
          extra_args: '--forwarded-allow-ips="*"'
          preload: true
        celery:
          concurrency: 2
          loglevel: DEBUG
        handlers:
          handler:
            processes: 3
            pools:
              - job-handler
              - workflow-scheduler
